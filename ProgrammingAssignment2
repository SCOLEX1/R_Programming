## Put comments here that give an overall description of what your
## functions do

## first action is to identify and calculate the inverse of a matrix.

## The first function, makeCacheMatrix creates a special Matrix, which is really a list containing a function to:
## set the value of the matrix 
## get the value of the matrix 
## set the value of the inverse
## get the value of the inverse


makeCacheMatrix <- function(x = matrix()) {
  m <- NULL
  set <- function(y) {
    x <<- y
    m <<- NULL
  }

  get <- function() x
  setinv <- function(solve) m <<- solve
  getinv <- function() m
  list(set = set, get = get,
       setinv = setinv,
       getinv = getinv)
}


## Write a short comment describing this function
## This portion of the code returns the inverse of the matrix.  
## If the inverse has already been calculated, it pulls the inverse from the cashe.

cacheSolve <- function(x, ...) {
        ## Return a matrix that is the inverse of 'x'
  m <- x$getinv()
  if(!is.null(m)) {
    message("getting cached data")
    return(m)
  }
  data <- x$get()
  m <- solve(data, ...)
  x$setinv(m)
  m
}

